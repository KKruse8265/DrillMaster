<?xml version="1.0" encoding="UTF-8"?><diagram program="umlet" version="11.3">
  <zoom_level>4</zoom_level>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>388</x>
      <y>80</y>
      <w>136</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Collection
--
+add(E e):boolean
+add(int index, E element):void
+addAll(Collection&lt;? extends E&gt; c):boolean

+clear():void
+contains(Object o):boolean
+containsAll(Collection&lt;?&gt; c):boolean
+equals(Object o):boolean
+hashCode():int
+isEmpty():boolean
+iterator():Iterator&lt;E&gt;
+remove(Object o):boolean
+removeAll(Collection&lt;?&gt; c):boolean
+retainAll(Collection&lt;?&gt; c):boolean
+size():int
+toArray():Object[]
+toArray(T[] a):&lt;T&gt; T[]


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>548</x>
      <y>104</y>
      <w>160</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
List&lt;E&gt;
--
+add(int index, E element):void
+addAll(int index, Collection&lt;? extends E&gt; c):boolean
+get(int index):E
+indexOf(Object o):int
+lastIndexOf(Object o):int
+remove(int index):E
+set(int index, E element):E
+subList(int fromIndex, int toIndex):List&lt;E&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>192</x>
      <y>88</y>
      <w>140</w>
      <h>188</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Queue&lt;E&gt;
--
+element():E
.
Retrieves, but does not remove, 
the head of this queue.
:
+offer(E e):boolean
.
Inserts the specified element into this queue 
if it is possible to do so immediately without 
violating capacity restrictions.
:
+peek():E
.
Retrieves, but does not remove, the head of 
this queue, or returns null if this queue 
is empty.
:
+poll():E
.
Retrieves and removes the head of this queue, 
or returns null if this queue is empty.
:
+remove():E
.
Retrieves and removes the head of this queue.
:
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>512</x>
      <y>112</y>
      <w>44</w>
      <h>24</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>12;16;36;12</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>320</x>
      <y>116</y>
      <w>76</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>68;12;12;68</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>440</x>
      <y>232</y>
      <w>136</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractClass&gt;&gt;
AbstractCollection&lt;E&gt;
--
+toString():String
Returns a string representation of this collection.
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>440</x>
      <y>196</y>
      <w>80</w>
      <h>44</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>12;12;72;36</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>172</x>
      <y>448</y>
      <w>100</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
ArrayDeque&lt;E&gt;
--
+peekFirst():E +peekLast():E
.does not remove first or R. null:
+pollFirst():E +pollLast():E
.remove first or R. null:
+push(E e):void
.pushes an element onto the stack:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>196</x>
      <y>288</y>
      <w>148</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Interface&gt;&gt;
Deque&lt;E&gt;
--
+addFirst(e):void
+addLast(E e):void
+descendingIterator():Iterator&lt;E&gt;
+getFirst():E +getLast():E 
.does not remove:
+pollFirst():void +pollLast():void
.retrives and removes:
+removeFirst():E +removeLast():E
.retrieves and removes the first/last:
+remove[First/Last]Occurrence(Object o):boolean
.Removes the first occurrence of the specified E:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>220</x>
      <y>264</y>
      <w>36</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>28;12;12;24</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>316</x>
      <y>196</y>
      <w>144</w>
      <h>100</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>136;12;12;92</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>208</x>
      <y>376</y>
      <w>56</w>
      <h>80</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>48;12;12;72</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>288</x>
      <y>480</y>
      <w>172</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
LinkedList&lt;E&gt;
--
+clone():Object
.Returns a shallow copy of this LinkedList:
+push(E e):void
.Pushes an element onto the stack represented by this list:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>500</x>
      <y>304</y>
      <w>176</w>
      <h>48</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractClass&gt;&gt;
AbstractList&lt;E&gt;
--
#transient int modCount
--
+removeRange(int fromIndex, int toIndex):protected void
.Removes from this list all of the elements whose index is 
between fromIndex, inclusive, and toIndex, exclusive.:


</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>488</x>
      <y>252</y>
      <w>64</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>12;12;56;52</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>428</x>
      <y>388</y>
      <w>84</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractClass&gt;&gt;
AbstractSequentialList&lt;E&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>452</x>
      <y>340</y>
      <w>124</w>
      <h>56</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>116;12;12;48</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>568</x>
      <y>168</y>
      <w>64</w>
      <h>144</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>56;12;12;136</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>364</x>
      <y>396</y>
      <w>108</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>100;12;12;84</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>248</x>
      <y>376</y>
      <w>128</w>
      <h>112</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>12;12;120;104</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>380</x>
      <y>304</y>
      <w>84</w>
      <h>20</h>
    </coordinates>
    <panel_attributes>&lt;&lt;AbstractClass&gt;&gt;
AbstractQueue&lt;E&gt;
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>408</x>
      <y>252</y>
      <w>100</w>
      <h>60</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>92;12;12;52</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>364</x>
      <y>344</y>
      <w>116</w>
      <h>32</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
PriorityQueue&lt;E&gt;
--
+comparator():Comparator&lt;? super E&gt;</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>388</x>
      <y>312</y>
      <w>36</w>
      <h>40</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>28;12;12;32</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>320</x>
      <y>260</y>
      <w>108</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;.</panel_attributes>
    <additional_attributes>12;12;100;44</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>476</x>
      <y>420</y>
      <w>124</w>
      <h>84</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
ArrayList&lt;E&gt;
--
+ensureCapacity(int minCapacity):void
.Increases the capacity of this ArrayList 
instance, if necessary, to ensure that it can 
hold at least the number of elements 
specified by the minimum capacity 
argument:
+trimToSize():void
.Trims the capacity of this ArrayList 
instance to be the list's current size:</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>504</x>
      <y>340</y>
      <w>80</w>
      <h>88</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>72;12;12;80</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>620</x>
      <y>212</y>
      <w>140</w>
      <h>76</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
CopyOnWriteArrayList&lt;E&gt;
--
+addAllAbsent(Collection&lt;? extends E&gt; c):int
+addIfAbsent(E e):boolean
+clone():Object
+indexOf(E e, int index):int
+lastIndexOf(E e, int index):int
+listIterator():ListIterator&lt;E&gt;
+listIterator(int index):ListIterator&lt;E&gt;
+toString():String</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>616</x>
      <y>168</y>
      <w>68</w>
      <h>52</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>12;12;60;44</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>608</x>
      <y>368</y>
      <w>120</w>
      <h>164</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
Vector&lt;E&gt;
--
int #capacityIncrement
int #elementCount
Object[] #elementData
--
+addElement(E obj):void
+capacity():int
+clone():Object
+copyInto(Object[] anArray):void
+elementAt(int index):E
+elements():Enumeration&lt;E&gt;
+ensureCapacity(int minCapacity):void
+firstElement():E
+insertElementAt(E obj, int index):void
+lastElement():E
+lastIndexOf(E e, int index):int
+listIterator():ListIterator&lt;E&gt;
+listIterator(int index):ListIterator&lt;E&gt;
+removeAllElements():void
+removeElement(Object obj):boolean
+removeElementAt(int index):void
+setElementAt(E obj, int index):void
+setSize(int newSize):void
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>584</x>
      <y>340</y>
      <w>68</w>
      <h>36</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>12;12;60;28</additional_attributes>
  </element>
  <element>
    <type>com.umlet.element.Class</type>
    <coordinates>
      <x>744</x>
      <y>448</y>
      <w>108</w>
      <h>128</h>
    </coordinates>
    <panel_attributes>&lt;&lt;Class&gt;&gt;
Stack&lt;E&gt;
--
+empty():boolean
(Tests if this stack is empty.)
+peek():E
(Looks at the object at the top of 
this stack without removing it 
from the stack.)
+pop():E
(Removes the object at the top
 of this stack and returns that
 object as the value of this function.)
+push(E item):E
(Pushes an item onto the top
 of this stack.)
+search(Object o):int
(Returns the 1-based position 
where an object is on this stack)</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <type>com.umlet.element.Relation</type>
    <coordinates>
      <x>716</x>
      <y>364</y>
      <w>80</w>
      <h>92</h>
    </coordinates>
    <panel_attributes>lt=&lt;.</panel_attributes>
    <additional_attributes>12;12;72;84</additional_attributes>
  </element>
</diagram>
